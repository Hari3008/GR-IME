#Loading a PNG image
load res/original-image.png original-image

#Getting the red component
red-component original-image image-red-component

#Saving the red component
save res/script-image-red-component.png image-red-component

#Getting the green component
green-component original-image image-green-component

#Saving the green component
save res/script-image-green-component.png image-green-component

#getting just the Blue-component
blue-component original-image image-blue-component

#Saving the blue component
save res/script-image-blue-component.png image-blue-component

#Blurring the image
blur original-image image-blur

#Savingg the blurred image
save res/script-image-blur.png image-blur

#Sharpening the image
sharpen original-image image-sharper

#save the sharper image
save res/script-image-sharper.png image-sharper

#Brighten the image
brighten 20 original-image image-brighter

#Saving the brighter image
save res/script-image-brighter.png image-brighter

#Splitting the image into three i.e. red green and blue components
rgb-split original-image image-red-split image-green-split image-blue-split

#Save the 3 split images
save res/script-image-red-split.png image-red-split
save res/script-image-green-split.png image-green-split
save res/script-image-blue-split.png image-blue-split

#Flip the image vertically
vertical-flip original-image image-vertical-flip

#Save the vertically flipped image
save res/script-image-vertical-flip.png image-vertical-flip

#Flip the image horizontally
horizontal-flip original-image image-horizontal-flip

#Save the vertically flipped image
save res/script-image-horizontal-flip.png image-horizontal-flip

#Convert the image into sepia
sepia original-image image-sepia

#Save the greyscale
save res/script-image-sepia.png image-sepia

#Convert the image into luma
luma-component original-image image-luma

#Apply blur filter on luma image
blur image-luma image-luma-blur

#Save the luma
save res/script-image-luma.png image-luma

#Convert the image into value
value-component original-image image-value

#Save the greyscale
save res/script-image-value.png image-value

#Convert the image into intensity
intensity-component original-image image-intensity

#Save the intensity
save res/script-image-intensity.png image-intensity

#Save as PPM file
save res/script-ppm-intensity.ppm image-intensity

#Save as JPG file
save res/script-jpg-intensity.jpg image-intensity

#Test extra whitespace
luma-component original-image  image-luma

#Test invalid filepath
load images/j$unit-small.png l2

#Test space in filepath
load images/ image-small.png l3

#Test misspelled command
blurd original-image image-blur

#Test brighten greater than 255
brighten 260 original-image image-bright-gt255

#Test wrong extension of image
load res/original-image.pbb original-image

#Test darken lesser than 0
brighten -260 original-image image-darken-gt255

#Test horizontal flip twice
horizontal-flip image-horizontal-flip image-horizontal-horizontal-flip

#Test vertical flip twice
vertical-flip image-vertical-flip image-vertical-vertical-flip

#Loading a PPM image
load res/ppm-original.ppm original-image-ppm

#Blurring the PPM image
blur original-image-ppm image-blur-ppm

#Saving the blur PPM component
save res/script-ppm-blur-image.ppm image-blur-ppm

#Loading a JPG image
load res/jpg-original.jpg original-image-jpg

#Getting the red component of JPG image
red-component original-image-jpg image-red-component-jpg

#Saving the red component
save res/script-jpg-red-component.jpg image-red-component-jpg